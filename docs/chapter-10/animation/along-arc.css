/* "housekeeping" to set the stage. */
body {
  font-family: "Myriad Pro", Frutiger, "Lucida Grande", "Lucida Sans", "Lucida Sans Unicode", Verdana, sans-serif;
}

button {
  margin-top: 2em;
  cursor: pointer;
  border: 0;
  padding: .5em 1em;
  color: #fff;
  border-radius: .25em;
  outline: none;
  font-size: 1em;
  background-color: #173b6d;
  background-image: linear-gradient(to bottom, #1a4a8e, #173b6d);
  box-shadow: 0 .25em 0 rgba(23, 59, 109, 0.3), inset 0 1px 0 rgba(0, 0, 0, 0.3);
  transition: all 150ms ease-in;
}

button:active {
  box-shadow: 0 0 0 rgba(23, 59, 109, 0.3), inset 0 1px 0 rgba(0, 0, 0, 0.3);
  transform: translateY(.25em);
}

/* -- end housekeeping. -- */

/**
  * Note: we've simplified the prefixed syntax down to just using
  * the webkit-prefixed version (which covers most browsers in use today) 
  * apart from the standard unprefixed syntax.
  */

/**
  * Make the container be a horizontal flexbox container, distributing the
  * items inside to space out all the way to the edges.
  */
.upload {
  display: flex;
  justify-content: space-between;
  height: 100px;
  width: 400px;
  margin-top: 100;
  background-color: rgba(0, 0, 0, 0.1);
  padding: 1em;
  border-radius: .5em;
  transform: translateZ(0);
}

/**
  * A class name common for all the icons, setting the background properties
  * and common sizing.
  */
.icon {
  width: 4em;
  background: none no-repeat 50% 50%/contain;
}

.computer-icon {
  background-image: url(images/monitor.svg);
}

/**
  * Here's where we tie in the animation properties.
  */
.file-icon {
  -webkit-animation: jump 2s ease-in-out infinite;
  animation: jump 2s ease-in-out infinite;
  /* equal to setting the following animation properties:
    animation-name: jump;
    animation-duration: 2s;
    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
    */
  background-image: url(images/file.svg);
}

/**
  * We give the server icon positioning to be able to position it on top of  
  * the file icon with z-index.
  */
.server-icon {
  position: relative;
  z-index: 2;
  background-image: url(images/cloud_storage.svg);
}

/**
  * When the animation is paused, change the animation-play-state prop.
  */
.file-icon.is-paused {
  animation-play-state: paused;
}

/**
  * When the animation is stopped (at the start of an iteration), hide the icon
  * and set the play state to paused.
  */
.file-icon.is-stopped {
  display: none;
  animation-play-state: paused;
}

/**
  * When the animation is stopped, show a checkmark icon
  * after the server icon, using a pseudo-element.
  */
.file-icon.is-stopped+.server-icon::after {
  content: '';
  display: block;
  width: 3em;
  height: 3em;
  background: url(images/checkmark.svg) 50% 50% no-repeat;
  background-size: contain;
  position: absolute;
  bottom: 1.5em;
  left: 60%;
}


/**
  * Keyframe definitions - note that prefixed versions have to have
  * a prefixed @keyframe block as well.
  */

@keyframes jump {
  from {
    transform: rotate(0deg) translateX(-170px) rotate(0deg) scale(1);
  }

  70%,
  100% {
    transform: rotate(175deg) translateX(-170px) rotate(-175deg) scale(.5);
  }
}